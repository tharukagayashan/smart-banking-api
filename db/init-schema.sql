CREATE SEQUENCE IF NOT EXISTS BN_M_ACC_CARD_DETAIL_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS BN_M_ACCOUNT_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS BN_M_BENEFICIARY_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS BN_M_CARD_DETAIL_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS BN_M_CUSTOMER_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS BN_M_LOAN_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS BN_R_ACCOUNT_TYPE_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS BN_R_BANK_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS BN_R_BRANCH_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS BN_R_CHARGE_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS BN_R_CURRENCY_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS BN_R_FEE_TYPE_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS BN_R_INT_RATE_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS BN_R_LOAN_PERIOD_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS BN_R_LOAN_PRODUCT_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS BN_R_LOAN_TYPE_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS BN_R_STATUS_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS BN_R_TRAN_TYPE_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS BN_T_TRAN_SEQ START WITH 1 INCREMENT BY 1;

CREATE TABLE BN_M_ACC_CARD_DETAILS
(
    ACC_CARD_ID BIGINT NOT NULL,
    CREATED_BY  VARCHAR(255),
    UPDATED_BY  VARCHAR(255),
    CREATED_ON  TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON  TIMESTAMP WITHOUT TIME ZONE,
    ACCOUNT_ID  BIGINT NOT NULL,
    CARD_ID     BIGINT NOT NULL,
    CONSTRAINT PK_BN_M_ACC_CARD_DETAILS PRIMARY KEY (ACC_CARD_ID)
);

CREATE TABLE BN_M_ACCOUNT
(
    ACCOUNT_ID      BIGINT NOT NULL,
    CREATED_BY      VARCHAR(255),
    UPDATED_BY      VARCHAR(255),
    CREATED_ON      TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON      TIMESTAMP WITHOUT TIME ZONE,
    ACCOUNT_NO      VARCHAR(25),
    CURRENT_BAL     FLOAT  NOT NULL,
    AVAILABLE_BAL   FLOAT  NOT NULL,
    HOLD_BAL        FLOAT  NOT NULL,
    OPEN_DATE       DATE,
    IS_ACTIVE       BOOLEAN,
    CUSTOMER_ID     BIGINT NOT NULL,
    ACCOUNT_TYPE_ID BIGINT NOT NULL,
    STATUS_ID       BIGINT NOT NULL,
    CURRENCY_ID     BIGINT NOT NULL,
    BRANCH_ID       BIGINT NOT NULL,
    CONSTRAINT PK_BN_M_ACCOUNT PRIMARY KEY (ACCOUNT_ID)
);

CREATE TABLE BN_M_BENEFICIARY
(
    BENEFICIARY_ID BIGINT NOT NULL,
    CREATED_BY     VARCHAR(255),
    UPDATED_BY     VARCHAR(255),
    CREATED_ON     TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON     TIMESTAMP WITHOUT TIME ZONE,
    FULL_NAME      VARCHAR(100),
    ACCOUNT_NO     VARCHAR(25),
    NIC            VARCHAR(12),
    MOBILE_NO      VARCHAR(10),
    EMAIL          VARCHAR(60),
    ACCOUNT_ID     BIGINT NOT NULL,
    BRANCH_ID      BIGINT NOT NULL,
    CONSTRAINT PK_BN_M_BENEFICIARY PRIMARY KEY (BENEFICIARY_ID)
);

CREATE TABLE BN_M_CARD_DETAIL
(
    CARD_ID     BIGINT NOT NULL,
    CREATED_BY  VARCHAR(255),
    UPDATED_BY  VARCHAR(255),
    CREATED_ON  TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON  TIMESTAMP WITHOUT TIME ZONE,
    CARD_TYPE   VARCHAR(20),
    CARD_NO     VARCHAR(16),
    EXPIRY_DATE VARCHAR(10),
    CVV         VARCHAR(3),
    CONSTRAINT PK_BN_M_CARD_DETAIL PRIMARY KEY (CARD_ID)
);

CREATE TABLE BN_M_CUSTOMER
(
    CUSTOMER_ID BIGINT NOT NULL,
    CREATED_BY  VARCHAR(255),
    UPDATED_BY  VARCHAR(255),
    CREATED_ON  TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON  TIMESTAMP WITHOUT TIME ZONE,
    FIRST_NAME  VARCHAR(50),
    LAST_NAME   VARCHAR(50),
    DOB         DATE,
    ADDRESS     VARCHAR(200),
    EMAIL       VARCHAR(60),
    MOBILE_NO   VARCHAR(10),
    NIC         VARCHAR(12),
    GENDER      VARCHAR(1),
    IS_ACTIVE   BOOLEAN,
    CONSTRAINT PK_BN_M_CUSTOMER PRIMARY KEY (CUSTOMER_ID)
);

CREATE TABLE BN_M_LOAN
(
    LOAN_ID               BIGINT NOT NULL,
    CREATED_BY            VARCHAR(255),
    UPDATED_BY            VARCHAR(255),
    CREATED_ON            TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON            TIMESTAMP WITHOUT TIME ZONE,
    AMOUNT                FLOAT  NOT NULL,
    INTEREST              FLOAT  NOT NULL,
    TOT_INSTALLMENTS      INTEGER,
    NEXT_INSTALLMENT_DATE DATE,
    TOT_ARREARS_AMT       FLOAT  NOT NULL,
    REM_INSTALLMENTS      INTEGER,
    NEXT_INSTALLMENT_AMT  FLOAT  NOT NULL,
    DISTRIBUTED_AMT       FLOAT  NOT NULL,
    TOT_SETTLED_AMT       FLOAT  NOT NULL,
    TOT_INTEREST_PAID     FLOAT  NOT NULL,
    TOT_PAID              FLOAT  NOT NULL,
    STATUS_ID             BIGINT NOT NULL,
    CUSTOMER_ID           BIGINT NOT NULL,
    LOAN_PRODUCT_ID       BIGINT NOT NULL,
    CONSTRAINT PK_BN_M_LOAN PRIMARY KEY (LOAN_ID)
);

CREATE TABLE BN_R_ACCOUNT_TYPE
(
    ACCOUNT_TYPE_ID   BIGINT NOT NULL,
    CREATED_BY        VARCHAR(255),
    UPDATED_BY        VARCHAR(255),
    CREATED_ON        TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON        TIMESTAMP WITHOUT TIME ZONE,
    ACCOUNT_TYPE_NAME VARCHAR(50),
    ACCOUNT_TYPE_CODE VARCHAR(5),
    CONSTRAINT PK_BN_R_ACCOUNT_TYPE PRIMARY KEY (ACCOUNT_TYPE_ID)
);

CREATE TABLE BN_R_BANK
(
    BANK_ID    BIGINT NOT NULL,
    CREATED_BY VARCHAR(255),
    UPDATED_BY VARCHAR(255),
    CREATED_ON TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON TIMESTAMP WITHOUT TIME ZONE,
    BANK_NAME  VARCHAR(45),
    BANK_CODE  VARCHAR(5),
    IS_ACTIVE  BOOLEAN,
    CONSTRAINT PK_BN_R_BANK PRIMARY KEY (BANK_ID)
);

CREATE TABLE BN_R_BRANCH
(
    BRANCH_ID   BIGINT NOT NULL,
    CREATED_BY  VARCHAR(255),
    UPDATED_BY  VARCHAR(255),
    CREATED_ON  TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON  TIMESTAMP WITHOUT TIME ZONE,
    BRANCH_NAME VARCHAR(50),
    BRANCH_CODE VARCHAR(5),
    IS_ACTIVE   BOOLEAN,
    BANK_ID     BIGINT NOT NULL,
    CONSTRAINT PK_BN_R_BRANCH PRIMARY KEY (BRANCH_ID)
);

CREATE TABLE BN_R_CHARGE
(
    CHARGE_ID       BIGINT NOT NULL,
    CREATED_BY      VARCHAR(255),
    UPDATED_BY      VARCHAR(255),
    CREATED_ON      TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON      TIMESTAMP WITHOUT TIME ZONE,
    CHARGE_DESC     VARCHAR(100),
    AMOUNT          FLOAT  NOT NULL,
    EFFECTIVE_DATE  DATE,
    EXPIRATION_DATE DATE,
    FEE_TYPE_ID     BIGINT NOT NULL,
    CURRENCY_ID     BIGINT NOT NULL,
    CONSTRAINT PK_BN_R_CHARGE PRIMARY KEY (CHARGE_ID)
);

CREATE TABLE BN_R_CURRENCY
(
    CURRENCY_ID   BIGINT NOT NULL,
    CREATED_BY    VARCHAR(255),
    UPDATED_BY    VARCHAR(255),
    CREATED_ON    TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON    TIMESTAMP WITHOUT TIME ZONE,
    CURRENCY_NAME VARCHAR(45),
    CURRENCY_CODE VARCHAR(5),
    CONSTRAINT PK_BN_R_CURRENCY PRIMARY KEY (CURRENCY_ID)
);

CREATE TABLE BN_R_FEE_TYPE
(
    FEE_TYPE_ID   BIGINT NOT NULL,
    CREATED_BY    VARCHAR(255),
    UPDATED_BY    VARCHAR(255),
    CREATED_ON    TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON    TIMESTAMP WITHOUT TIME ZONE,
    FEE_TYPE_NAME VARCHAR(45),
    FEE_TYPE_DESC VARCHAR(100),
    CONSTRAINT PK_BN_R_FEE_TYPE PRIMARY KEY (FEE_TYPE_ID)
);

CREATE TABLE BN_R_INT_RATE
(
    INT_RATE_ID   BIGINT NOT NULL,
    CREATED_BY    VARCHAR(255),
    UPDATED_BY    VARCHAR(255),
    CREATED_ON    TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON    TIMESTAMP WITHOUT TIME ZONE,
    INT_RATE_NAME VARCHAR(45),
    INT_RATE_DESC VARCHAR(100),
    RATE          FLOAT  NOT NULL,
    CONSTRAINT PK_BN_R_INT_RATE PRIMARY KEY (INT_RATE_ID)
);

CREATE TABLE BN_R_LOAN_PERIOD
(
    LOAN_PERIOD_ID   BIGINT NOT NULL,
    CREATED_BY       VARCHAR(255),
    UPDATED_BY       VARCHAR(255),
    CREATED_ON       TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON       TIMESTAMP WITHOUT TIME ZONE,
    LOAN_PERIOD_NAME VARCHAR(45),
    LOAN_PERIOD_DESC VARCHAR(100),
    MONTH            INTEGER,
    CONSTRAINT PK_BN_R_LOAN_PERIOD PRIMARY KEY (LOAN_PERIOD_ID)
);

CREATE TABLE BN_R_LOAN_PRODUCT
(
    LOAN_PRODUCT_ID BIGINT NOT NULL,
    CREATED_BY      VARCHAR(255),
    UPDATED_BY      VARCHAR(255),
    CREATED_ON      TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON      TIMESTAMP WITHOUT TIME ZONE,
    LOAN_TYPE_ID    BIGINT NOT NULL,
    INT_RATE_ID     BIGINT NOT NULL,
    LOAN_PERIOD_ID  BIGINT NOT NULL,
    CONSTRAINT PK_BN_R_LOAN_PRODUCT PRIMARY KEY (LOAN_PRODUCT_ID)
);

CREATE TABLE BN_R_LOAN_TYPE
(
    LOAN_TYPE_ID   BIGINT NOT NULL,
    CREATED_BY     VARCHAR(255),
    UPDATED_BY     VARCHAR(255),
    CREATED_ON     TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON     TIMESTAMP WITHOUT TIME ZONE,
    LOAN_TYPE_NAME VARCHAR(50),
    LOAN_TYPE_CODE VARCHAR(5),
    LOAN_TYPE_DESC VARCHAR(100),
    CONSTRAINT PK_BN_R_LOAN_TYPE PRIMARY KEY (LOAN_TYPE_ID)
);

CREATE TABLE BN_R_STATUS
(
    STATUS_ID   BIGINT NOT NULL,
    CREATED_BY  VARCHAR(255),
    UPDATED_BY  VARCHAR(255),
    CREATED_ON  TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON  TIMESTAMP WITHOUT TIME ZONE,
    STATUS_NAME VARCHAR(45),
    STATUS_CODE VARCHAR(5),
    STATUS_TYPE VARCHAR(45),
    CONSTRAINT PK_BN_R_STATUS PRIMARY KEY (STATUS_ID)
);

CREATE TABLE BN_R_TRAN_TYPE
(
    TRAN_TYPE_ID   BIGINT NOT NULL,
    CREATED_BY     VARCHAR(255),
    UPDATED_BY     VARCHAR(255),
    CREATED_ON     TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON     TIMESTAMP WITHOUT TIME ZONE,
    TRAN_TYPE_NAME VARCHAR(45),
    TRAN_TYPE_CODE VARCHAR(5),
    CONSTRAINT PK_BN_R_TRAN_TYPE PRIMARY KEY (TRAN_TYPE_ID)
);

CREATE TABLE BN_T_TRAN
(
    TRAN_ID         BIGINT       NOT NULL,
    CREATED_BY      VARCHAR(255),
    UPDATED_BY      VARCHAR(255),
    CREATED_ON      TIMESTAMP WITHOUT TIME ZONE,
    UPDATED_ON      TIMESTAMP WITHOUT TIME ZONE,
    AMOUNT          FLOAT        NOT NULL,
    TRAN_DATE       DATE         NOT NULL,
    TRAN_TIME       TIME WITHOUT TIME ZONE NOT NULL,
    TRAN_TYPE_ID    BIGINT       NOT NULL,
    DESCRIPTION     VARCHAR(255) NOT NULL,
    FROM_ACCOUNT_NO VARCHAR(255) NOT NULL,
    TO_ACCOUNT_NO   VARCHAR(255) NOT NULL,
    STATUS_ID       BIGINT       NOT NULL,
    CONSTRAINT PK_BN_T_TRAN PRIMARY KEY (TRAN_ID)
);

ALTER TABLE BN_M_ACCOUNT
    ADD CONSTRAINT UC_BN_M_ACCOUNT_ACCOUNT_NO UNIQUE (ACCOUNT_NO);

ALTER TABLE BN_M_CARD_DETAIL
    ADD CONSTRAINT UC_BN_M_CARD_DETAIL_CARD_NO UNIQUE (CARD_NO);

ALTER TABLE BN_M_CUSTOMER
    ADD CONSTRAINT UC_BN_M_CUSTOMER_NIC UNIQUE (NIC);

ALTER TABLE BN_R_ACCOUNT_TYPE
    ADD CONSTRAINT UC_BN_R_ACCOUNT_TYPE_ACCOUNT_TYPE_CODE UNIQUE (ACCOUNT_TYPE_CODE);

ALTER TABLE BN_R_BANK
    ADD CONSTRAINT UC_BN_R_BANK_BANK_CODE UNIQUE (BANK_CODE);

ALTER TABLE BN_R_BRANCH
    ADD CONSTRAINT UC_BN_R_BRANCH_BRANCH_CODE UNIQUE (BRANCH_CODE);

ALTER TABLE BN_R_CURRENCY
    ADD CONSTRAINT UC_BN_R_CURRENCY_CURRENCY_CODE UNIQUE (CURRENCY_CODE);

ALTER TABLE BN_R_LOAN_TYPE
    ADD CONSTRAINT UC_BN_R_LOAN_TYPE_LOAN_TYPE_CODE UNIQUE (LOAN_TYPE_CODE);

ALTER TABLE BN_R_STATUS
    ADD CONSTRAINT UC_BN_R_STATUS_STATUS_CODE UNIQUE (STATUS_CODE);

ALTER TABLE BN_R_TRAN_TYPE
    ADD CONSTRAINT UC_BN_R_TRAN_TYPE_TRAN_TYPE_CODE UNIQUE (TRAN_TYPE_CODE);

CREATE UNIQUE INDEX BN_M_ACCOUNT_ACCOUNT_NO_UNIQUE_IDX ON BN_M_ACCOUNT (ACCOUNT_NO);

CREATE UNIQUE INDEX BN_M_CARD_DETAIL_CARD_NO_UNIQUE_IDX ON BN_M_CARD_DETAIL (CARD_NO);

CREATE UNIQUE INDEX BN_M_CUSTOMER_DOB_UNIQUE_IDX ON BN_M_CUSTOMER (NIC);

CREATE UNIQUE INDEX BN_R_ACCOUNT_TYPE_ACCOUNT_TYPE_CODE_IDX ON BN_R_ACCOUNT_TYPE (ACCOUNT_TYPE_CODE);

CREATE UNIQUE INDEX BN_R_BANK_BANK_CODE_IDX ON BN_R_BANK (BANK_CODE);

CREATE UNIQUE INDEX BN_R_BRANCH_BRANCH_CODE_IDX ON BN_R_BRANCH (BRANCH_CODE);

CREATE UNIQUE INDEX BN_R_CURRENCY_CURRENCY_CODE_IDX ON BN_R_CURRENCY (CURRENCY_CODE);

CREATE UNIQUE INDEX BN_R_LOAN_TYPE_LOAN_TYPE_CODE_IDX ON BN_R_LOAN_TYPE (LOAN_TYPE_CODE);

CREATE UNIQUE INDEX BN_R_STATUS_STATUS_CODE_IDX ON BN_R_STATUS (STATUS_CODE);

CREATE UNIQUE INDEX BN_R_TRAN_TYPE_TRAN_TYPE_CODE_IDX ON BN_R_TRAN_TYPE (TRAN_TYPE_CODE);

ALTER TABLE BN_M_ACCOUNT
    ADD CONSTRAINT FK_BN_M_ACCOUNT_ON_ACCOUNT_TYPE FOREIGN KEY (ACCOUNT_TYPE_ID) REFERENCES BN_R_ACCOUNT_TYPE (ACCOUNT_TYPE_ID);

CREATE INDEX BN_M_ACCOUNT_ACCOUNT_TYPE_ID_IDX ON BN_M_ACCOUNT (ACCOUNT_TYPE_ID);

ALTER TABLE BN_M_ACCOUNT
    ADD CONSTRAINT FK_BN_M_ACCOUNT_ON_BRANCH FOREIGN KEY (BRANCH_ID) REFERENCES BN_R_BRANCH (BRANCH_ID);

CREATE INDEX BN_M_ACCOUNT_BRANCH_ID_IDX ON BN_M_ACCOUNT (BRANCH_ID);

ALTER TABLE BN_M_ACCOUNT
    ADD CONSTRAINT FK_BN_M_ACCOUNT_ON_CURRENCY FOREIGN KEY (CURRENCY_ID) REFERENCES BN_R_CURRENCY (CURRENCY_ID);

CREATE INDEX BN_M_ACCOUNT_CURRENCY_ID_IDX ON BN_M_ACCOUNT (CURRENCY_ID);

ALTER TABLE BN_M_ACCOUNT
    ADD CONSTRAINT FK_BN_M_ACCOUNT_ON_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES BN_M_CUSTOMER (CUSTOMER_ID);

CREATE INDEX BN_M_ACCOUNT_CUSTOMER_ID_IDX ON BN_M_ACCOUNT (CUSTOMER_ID);

ALTER TABLE BN_M_ACCOUNT
    ADD CONSTRAINT FK_BN_M_ACCOUNT_ON_STATUS FOREIGN KEY (STATUS_ID) REFERENCES BN_R_STATUS (STATUS_ID);

CREATE INDEX BN_M_ACCOUNT_STATUS_ID_IDX ON BN_M_ACCOUNT (STATUS_ID);

ALTER TABLE BN_M_ACC_CARD_DETAILS
    ADD CONSTRAINT FK_BN_M_ACC_CARD_DETAILS_ON_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES BN_M_ACCOUNT (ACCOUNT_ID);

CREATE INDEX BN_M_ACC_CARD_DETAILS_ACCOUNT_ID ON BN_M_ACC_CARD_DETAILS (ACCOUNT_ID);

ALTER TABLE BN_M_ACC_CARD_DETAILS
    ADD CONSTRAINT FK_BN_M_ACC_CARD_DETAILS_ON_CARD FOREIGN KEY (CARD_ID) REFERENCES BN_M_CARD_DETAIL (CARD_ID);

CREATE INDEX BN_M_ACC_CARD_DETAILS_CARD_ID ON BN_M_ACC_CARD_DETAILS (CARD_ID);

ALTER TABLE BN_M_BENEFICIARY
    ADD CONSTRAINT FK_BN_M_BENEFICIARY_ON_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES BN_M_ACCOUNT (ACCOUNT_ID);

CREATE INDEX BN_R_BENEFICIARY_ACCOUNT_ID_IDX ON BN_M_BENEFICIARY (ACCOUNT_ID);

ALTER TABLE BN_M_BENEFICIARY
    ADD CONSTRAINT FK_BN_M_BENEFICIARY_ON_BRANCH FOREIGN KEY (BRANCH_ID) REFERENCES BN_R_BRANCH (BRANCH_ID);

CREATE INDEX BN_R_BENEFICIARY_BRANCH_ID_IDX ON BN_M_BENEFICIARY (BRANCH_ID);

ALTER TABLE BN_M_LOAN
    ADD CONSTRAINT FK_BN_M_LOAN_ON_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES BN_M_CUSTOMER (CUSTOMER_ID);

CREATE INDEX BN_M_LOAN_CUSTOMER_ID_IDX ON BN_M_LOAN (CUSTOMER_ID);

ALTER TABLE BN_M_LOAN
    ADD CONSTRAINT FK_BN_M_LOAN_ON_LOAN_PRODUCT FOREIGN KEY (LOAN_PRODUCT_ID) REFERENCES BN_R_LOAN_PRODUCT (LOAN_PRODUCT_ID);

CREATE INDEX BN_M_LOAN_LOAN_PRODUCT_ID_IDX ON BN_M_LOAN (LOAN_PRODUCT_ID);

ALTER TABLE BN_M_LOAN
    ADD CONSTRAINT FK_BN_M_LOAN_ON_STATUS FOREIGN KEY (STATUS_ID) REFERENCES BN_R_STATUS (STATUS_ID);

CREATE INDEX BN_M_LOAN_STATUS_ID_IDX ON BN_M_LOAN (STATUS_ID);

ALTER TABLE BN_R_BRANCH
    ADD CONSTRAINT FK_BN_R_BRANCH_ON_BANK FOREIGN KEY (BANK_ID) REFERENCES BN_R_BANK (BANK_ID);

CREATE INDEX BN_R_BRANCH_BANK_ID_IDX ON BN_R_BRANCH (BANK_ID);

ALTER TABLE BN_R_CHARGE
    ADD CONSTRAINT FK_BN_R_CHARGE_ON_CURRENCY FOREIGN KEY (CURRENCY_ID) REFERENCES BN_R_CURRENCY (CURRENCY_ID);

CREATE INDEX BN_R_CHARGE_CURRENCY_ID_IDX ON BN_R_CHARGE (CURRENCY_ID);

ALTER TABLE BN_R_CHARGE
    ADD CONSTRAINT FK_BN_R_CHARGE_ON_FEE_TYPE FOREIGN KEY (FEE_TYPE_ID) REFERENCES BN_R_FEE_TYPE (FEE_TYPE_ID);

CREATE INDEX BN_R_CHARGE_FEE_TYPE_ID_IDX ON BN_R_CHARGE (FEE_TYPE_ID);

ALTER TABLE BN_R_LOAN_PRODUCT
    ADD CONSTRAINT FK_BN_R_LOAN_PRODUCT_ON_INT_RATE FOREIGN KEY (INT_RATE_ID) REFERENCES BN_R_INT_RATE (INT_RATE_ID);

CREATE INDEX BN_R_LOAN_PRODUCT_INT_RATE_ID_IDX ON BN_R_LOAN_PRODUCT (INT_RATE_ID);

ALTER TABLE BN_R_LOAN_PRODUCT
    ADD CONSTRAINT FK_BN_R_LOAN_PRODUCT_ON_LOAN_PERIOD FOREIGN KEY (LOAN_PERIOD_ID) REFERENCES BN_R_LOAN_PERIOD (LOAN_PERIOD_ID);

CREATE INDEX BN_R_LOAN_PRODUCT_LOAN_PERIOD_ID_IDX ON BN_R_LOAN_PRODUCT (LOAN_PERIOD_ID);

ALTER TABLE BN_R_LOAN_PRODUCT
    ADD CONSTRAINT FK_BN_R_LOAN_PRODUCT_ON_LOAN_TYPE FOREIGN KEY (LOAN_TYPE_ID) REFERENCES BN_R_LOAN_TYPE (LOAN_TYPE_ID);

CREATE INDEX BN_R_LOAN_PRODUCT_LOAN_TYPE_ID_IDX ON BN_R_LOAN_PRODUCT (LOAN_TYPE_ID);

ALTER TABLE BN_T_TRAN
    ADD CONSTRAINT FK_BN_T_TRAN_ON_STATUS FOREIGN KEY (STATUS_ID) REFERENCES BN_R_STATUS (STATUS_ID);

ALTER TABLE BN_T_TRAN
    ADD CONSTRAINT FK_BN_T_TRAN_ON_TRAN_TYPE FOREIGN KEY (TRAN_TYPE_ID) REFERENCES BN_R_TRAN_TYPE (TRAN_TYPE_ID);

CREATE INDEX BN_T_TRAN_TRAN_TYPE_ID_IDX ON BN_T_TRAN (TRAN_TYPE_ID);
CREATE SEQUENCE IF NOT EXISTS bn_m_acc_card_detail_seq START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS bn_m_account_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_m_beneficiary_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_m_card_detail_seq START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS bn_m_customer_seq START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS bn_m_loan_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_m_staff_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_r_account_type_seq START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS bn_r_bank_seq START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS bn_r_branch_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_r_charge_seq START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS bn_r_currency_seq START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS bn_r_fee_type_seq START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS bn_r_int_rate_seq START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS bn_r_loan_period_seq START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS bn_r_loan_product_seq START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS bn_r_loan_type_seq START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS bn_r_role_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_r_status_seq START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS bn_r_tran_type_seq START WITH 1 INCREMENT BY 50;

CREATE SEQUENCE IF NOT EXISTS bn_t_tran_seq START WITH 1 INCREMENT BY 50;

CREATE TABLE bn_m_acc_card_details
(
    acc_card_id BIGINT NOT NULL,
    created_by  VARCHAR(255),
    updated_by  VARCHAR(255),
    created_on  TIMESTAMP WITHOUT TIME ZONE,
    updated_on  TIMESTAMP WITHOUT TIME ZONE,
    account_id  BIGINT NOT NULL,
    card_id     BIGINT NOT NULL,
    CONSTRAINT pk_bn_m_acc_card_details PRIMARY KEY (acc_card_id)
);

CREATE TABLE bn_m_account
(
    account_id            BIGINT NOT NULL,
    created_by            VARCHAR(255),
    updated_by            VARCHAR(255),
    created_on            TIMESTAMP WITHOUT TIME ZONE,
    updated_on            TIMESTAMP WITHOUT TIME ZONE,
    account_no            VARCHAR(25),
    current_bal           FLOAT  NOT NULL,
    available_bal         FLOAT  NOT NULL,
    hold_bal              FLOAT  NOT NULL,
    open_date             date,
    is_active             BOOLEAN,
    is_first_deposit_done BOOLEAN,
    customer_id           BIGINT NOT NULL,
    account_type_id       BIGINT NOT NULL,
    status_id             BIGINT NOT NULL,
    currency_id           BIGINT NOT NULL,
    branch_id             BIGINT NOT NULL,
    CONSTRAINT pk_bn_m_account PRIMARY KEY (account_id)
);

CREATE TABLE bn_m_beneficiary
(
    beneficiary_id BIGINT NOT NULL,
    created_by     VARCHAR(255),
    updated_by     VARCHAR(255),
    created_on     TIMESTAMP WITHOUT TIME ZONE,
    updated_on     TIMESTAMP WITHOUT TIME ZONE,
    full_name      VARCHAR(100),
    account_no     VARCHAR(25),
    nic            VARCHAR(12),
    mobile_no      VARCHAR(10),
    email          VARCHAR(60),
    account_id     BIGINT NOT NULL,
    branch_id      BIGINT NOT NULL,
    CONSTRAINT pk_bn_m_beneficiary PRIMARY KEY (beneficiary_id)
);

CREATE TABLE bn_m_card_detail
(
    card_id     BIGINT NOT NULL,
    created_by  VARCHAR(255),
    updated_by  VARCHAR(255),
    created_on  TIMESTAMP WITHOUT TIME ZONE,
    updated_on  TIMESTAMP WITHOUT TIME ZONE,
    card_type   VARCHAR(20),
    card_no     VARCHAR(16),
    expiry_date VARCHAR(10),
    cvv         VARCHAR(3),
    CONSTRAINT pk_bn_m_card_detail PRIMARY KEY (card_id)
);

CREATE TABLE bn_m_customer
(
    customer_id BIGINT NOT NULL,
    created_by  VARCHAR(255),
    updated_by  VARCHAR(255),
    created_on  TIMESTAMP WITHOUT TIME ZONE,
    updated_on  TIMESTAMP WITHOUT TIME ZONE,
    first_name  VARCHAR(50),
    last_name   VARCHAR(50),
    dob         date,
    address     VARCHAR(200),
    email       VARCHAR(60),
    mobile_no   VARCHAR(10),
    nic         VARCHAR(12),
    gender      VARCHAR(1),
    is_active   BOOLEAN,
    CONSTRAINT pk_bn_m_customer PRIMARY KEY (customer_id)
);

CREATE TABLE bn_m_loan
(
    loan_id               BIGINT NOT NULL,
    created_by            VARCHAR(255),
    updated_by            VARCHAR(255),
    created_on            TIMESTAMP WITHOUT TIME ZONE,
    updated_on            TIMESTAMP WITHOUT TIME ZONE,
    amount                FLOAT  NOT NULL,
    interest              FLOAT  NOT NULL,
    tot_installments      INTEGER,
    next_installment_date date,
    tot_arrears_amt       FLOAT  NOT NULL,
    rem_installments      INTEGER,
    next_installment_amt  FLOAT  NOT NULL,
    distributed_amt       FLOAT  NOT NULL,
    tot_settled_amt       FLOAT  NOT NULL,
    tot_interest_paid     FLOAT  NOT NULL,
    tot_paid              FLOAT  NOT NULL,
    status_id             BIGINT NOT NULL,
    account_id            BIGINT NOT NULL,
    loan_product_id       BIGINT NOT NULL,
    CONSTRAINT pk_bn_m_loan PRIMARY KEY (loan_id)
);

CREATE TABLE bn_m_staff
(
    staff_id   BIGINT NOT NULL,
    created_by VARCHAR(255),
    updated_by VARCHAR(255),
    created_on TIMESTAMP WITHOUT TIME ZONE,
    updated_on TIMESTAMP WITHOUT TIME ZONE,
    first_name VARCHAR(50),
    last_name  VARCHAR(50),
    email      VARCHAR(70),
    username   VARCHAR(30),
    password   VARCHAR(200),
    mobile_no  VARCHAR(10),
    address    VARCHAR(80),
    is_active  BOOLEAN,
    role_id    BIGINT NOT NULL,
    branch_id  BIGINT NOT NULL,
    CONSTRAINT pk_bn_m_staff PRIMARY KEY (staff_id)
);

CREATE TABLE bn_r_account_type
(
    account_type_id   BIGINT NOT NULL,
    created_by        VARCHAR(255),
    updated_by        VARCHAR(255),
    created_on        TIMESTAMP WITHOUT TIME ZONE,
    updated_on        TIMESTAMP WITHOUT TIME ZONE,
    account_type_name VARCHAR(50),
    account_type_code VARCHAR(5),
    CONSTRAINT pk_bn_r_account_type PRIMARY KEY (account_type_id)
);

CREATE TABLE bn_r_bank
(
    bank_id    BIGINT NOT NULL,
    created_by VARCHAR(255),
    updated_by VARCHAR(255),
    created_on TIMESTAMP WITHOUT TIME ZONE,
    updated_on TIMESTAMP WITHOUT TIME ZONE,
    bank_name  VARCHAR(45),
    bank_code  VARCHAR(5),
    is_active  BOOLEAN,
    CONSTRAINT pk_bn_r_bank PRIMARY KEY (bank_id)
);

CREATE TABLE bn_r_branch
(
    branch_id   BIGINT NOT NULL,
    created_by  VARCHAR(255),
    updated_by  VARCHAR(255),
    created_on  TIMESTAMP WITHOUT TIME ZONE,
    updated_on  TIMESTAMP WITHOUT TIME ZONE,
    branch_name VARCHAR(50),
    branch_code VARCHAR(5),
    is_active   BOOLEAN,
    bank_id     BIGINT NOT NULL,
    CONSTRAINT pk_bn_r_branch PRIMARY KEY (branch_id)
);

CREATE TABLE bn_r_charge
(
    charge_id       BIGINT NOT NULL,
    created_by      VARCHAR(255),
    updated_by      VARCHAR(255),
    created_on      TIMESTAMP WITHOUT TIME ZONE,
    updated_on      TIMESTAMP WITHOUT TIME ZONE,
    charge_desc     VARCHAR(100),
    amount          FLOAT  NOT NULL,
    effective_date  date,
    expiration_date date,
    fee_type_id     BIGINT NOT NULL,
    currency_id     BIGINT NOT NULL,
    CONSTRAINT pk_bn_r_charge PRIMARY KEY (charge_id)
);

CREATE TABLE bn_r_currency
(
    currency_id   BIGINT NOT NULL,
    created_by    VARCHAR(255),
    updated_by    VARCHAR(255),
    created_on    TIMESTAMP WITHOUT TIME ZONE,
    updated_on    TIMESTAMP WITHOUT TIME ZONE,
    currency_name VARCHAR(45),
    currency_code VARCHAR(5),
    CONSTRAINT pk_bn_r_currency PRIMARY KEY (currency_id)
);

CREATE TABLE bn_r_fee_type
(
    fee_type_id   BIGINT NOT NULL,
    created_by    VARCHAR(255),
    updated_by    VARCHAR(255),
    created_on    TIMESTAMP WITHOUT TIME ZONE,
    updated_on    TIMESTAMP WITHOUT TIME ZONE,
    fee_type_name VARCHAR(45),
    fee_type_desc VARCHAR(100),
    CONSTRAINT pk_bn_r_fee_type PRIMARY KEY (fee_type_id)
);

CREATE TABLE bn_r_int_rate
(
    int_rate_id   BIGINT NOT NULL,
    created_by    VARCHAR(255),
    updated_by    VARCHAR(255),
    created_on    TIMESTAMP WITHOUT TIME ZONE,
    updated_on    TIMESTAMP WITHOUT TIME ZONE,
    int_rate_name VARCHAR(45),
    int_rate_desc VARCHAR(100),
    rate          FLOAT  NOT NULL,
    CONSTRAINT pk_bn_r_int_rate PRIMARY KEY (int_rate_id)
);

CREATE TABLE bn_r_loan_period
(
    loan_period_id   BIGINT NOT NULL,
    created_by       VARCHAR(255),
    updated_by       VARCHAR(255),
    created_on       TIMESTAMP WITHOUT TIME ZONE,
    updated_on       TIMESTAMP WITHOUT TIME ZONE,
    loan_period_name VARCHAR(45),
    loan_period_desc VARCHAR(100),
    month            INTEGER,
    CONSTRAINT pk_bn_r_loan_period PRIMARY KEY (loan_period_id)
);

CREATE TABLE bn_r_loan_product
(
    loan_product_id BIGINT NOT NULL,
    created_by      VARCHAR(255),
    updated_by      VARCHAR(255),
    created_on      TIMESTAMP WITHOUT TIME ZONE,
    updated_on      TIMESTAMP WITHOUT TIME ZONE,
    loan_type_id    BIGINT NOT NULL,
    int_rate_id     BIGINT NOT NULL,
    loan_period_id  BIGINT NOT NULL,
    CONSTRAINT pk_bn_r_loan_product PRIMARY KEY (loan_product_id)
);

CREATE TABLE bn_r_loan_type
(
    loan_type_id   BIGINT NOT NULL,
    created_by     VARCHAR(255),
    updated_by     VARCHAR(255),
    created_on     TIMESTAMP WITHOUT TIME ZONE,
    updated_on     TIMESTAMP WITHOUT TIME ZONE,
    loan_type_name VARCHAR(50),
    loan_type_code VARCHAR(5),
    loan_type_desc VARCHAR(100),
    CONSTRAINT pk_bn_r_loan_type PRIMARY KEY (loan_type_id)
);

CREATE TABLE bn_r_role
(
    role_id     BIGINT NOT NULL,
    created_by  VARCHAR(255),
    updated_by  VARCHAR(255),
    created_on  TIMESTAMP WITHOUT TIME ZONE,
    updated_on  TIMESTAMP WITHOUT TIME ZONE,
    name        VARCHAR(40),
    description VARCHAR(100),
    is_active   BOOLEAN,
    CONSTRAINT pk_bn_r_role PRIMARY KEY (role_id)
);

CREATE TABLE bn_r_status
(
    status_id   BIGINT NOT NULL,
    created_by  VARCHAR(255),
    updated_by  VARCHAR(255),
    created_on  TIMESTAMP WITHOUT TIME ZONE,
    updated_on  TIMESTAMP WITHOUT TIME ZONE,
    status_name VARCHAR(45),
    status_code VARCHAR(5),
    status_type VARCHAR(45),
    CONSTRAINT pk_bn_r_status PRIMARY KEY (status_id)
);

CREATE TABLE bn_r_tran_type
(
    tran_type_id   BIGINT NOT NULL,
    created_by     VARCHAR(255),
    updated_by     VARCHAR(255),
    created_on     TIMESTAMP WITHOUT TIME ZONE,
    updated_on     TIMESTAMP WITHOUT TIME ZONE,
    tran_type_name VARCHAR(45),
    tran_type_code VARCHAR(5),
    CONSTRAINT pk_bn_r_tran_type PRIMARY KEY (tran_type_id)
);

CREATE TABLE bn_t_tran
(
    tran_id         BIGINT       NOT NULL,
    created_by      VARCHAR(255),
    updated_by      VARCHAR(255),
    created_on      TIMESTAMP WITHOUT TIME ZONE,
    updated_on      TIMESTAMP WITHOUT TIME ZONE,
    amount          FLOAT        NOT NULL,
    tran_date       date         NOT NULL,
    tran_time       time WITHOUT TIME ZONE NOT NULL,
    tran_type_id    BIGINT       NOT NULL,
    description     VARCHAR(255) NOT NULL,
    from_account_no VARCHAR(255) NOT NULL,
    to_account_no   VARCHAR(255) NOT NULL,
    tran_reference  VARCHAR(200),
    status_id       BIGINT       NOT NULL,
    branch_id       BIGINT       NOT NULL,
    CONSTRAINT pk_bn_t_tran PRIMARY KEY (tran_id)
);

ALTER TABLE bn_m_account
    ADD CONSTRAINT uc_bn_m_account_account_no UNIQUE (account_no);

ALTER TABLE bn_m_card_detail
    ADD CONSTRAINT uc_bn_m_card_detail_card_no UNIQUE (card_no);

ALTER TABLE bn_m_customer
    ADD CONSTRAINT uc_bn_m_customer_nic UNIQUE (nic);

ALTER TABLE bn_m_staff
    ADD CONSTRAINT uc_bn_m_staff_username UNIQUE (username);

ALTER TABLE bn_r_account_type
    ADD CONSTRAINT uc_bn_r_account_type_account_type_code UNIQUE (account_type_code);

ALTER TABLE bn_r_bank
    ADD CONSTRAINT uc_bn_r_bank_bank_code UNIQUE (bank_code);

ALTER TABLE bn_r_branch
    ADD CONSTRAINT uc_bn_r_branch_branch_code UNIQUE (branch_code);

ALTER TABLE bn_r_currency
    ADD CONSTRAINT uc_bn_r_currency_currency_code UNIQUE (currency_code);

ALTER TABLE bn_r_loan_type
    ADD CONSTRAINT uc_bn_r_loan_type_loan_type_code UNIQUE (loan_type_code);

ALTER TABLE bn_r_status
    ADD CONSTRAINT uc_bn_r_status_status_code UNIQUE (status_code);

ALTER TABLE bn_r_tran_type
    ADD CONSTRAINT uc_bn_r_tran_type_tran_type_code UNIQUE (tran_type_code);

CREATE UNIQUE INDEX BN_M_ACCOUNT_ACCOUNT_NO_UNIQUE_IDX ON bn_m_account (account_no);

CREATE UNIQUE INDEX BN_M_CARD_DETAIL_CARD_NO_UNIQUE_IDX ON bn_m_card_detail (card_no);

CREATE UNIQUE INDEX BN_M_CUSTOMER_NIC_UNIQUE_IDX ON bn_m_customer (nic);

CREATE INDEX BN_M_STAFF_USERNAME_UNIQUE_IDX ON bn_m_staff (username);

CREATE UNIQUE INDEX BN_R_ACCOUNT_TYPE_ACCOUNT_TYPE_CODE_IDX ON bn_r_account_type (account_type_code);

CREATE UNIQUE INDEX BN_R_BANK_BANK_CODE_IDX ON bn_r_bank (bank_code);

CREATE UNIQUE INDEX BN_R_BRANCH_BRANCH_CODE_IDX ON bn_r_branch (branch_code);

CREATE UNIQUE INDEX BN_R_CURRENCY_CURRENCY_CODE_IDX ON bn_r_currency (currency_code);

CREATE UNIQUE INDEX BN_R_LOAN_TYPE_LOAN_TYPE_CODE_IDX ON bn_r_loan_type (loan_type_code);

CREATE UNIQUE INDEX BN_R_STATUS_STATUS_CODE_IDX ON bn_r_status (status_code);

CREATE UNIQUE INDEX BN_R_TRAN_TYPE_TRAN_TYPE_CODE_IDX ON bn_r_tran_type (tran_type_code);

ALTER TABLE bn_m_account
    ADD CONSTRAINT FK_BN_M_ACCOUNT_ON_ACCOUNT_TYPE FOREIGN KEY (account_type_id) REFERENCES bn_r_account_type (account_type_id);

CREATE INDEX BN_M_ACCOUNT_ACCOUNT_TYPE_ID_IDX ON bn_m_account (account_type_id);

ALTER TABLE bn_m_account
    ADD CONSTRAINT FK_BN_M_ACCOUNT_ON_BRANCH FOREIGN KEY (branch_id) REFERENCES bn_r_branch (branch_id);

CREATE INDEX BN_M_ACCOUNT_BRANCH_ID_IDX ON bn_m_account (branch_id);

ALTER TABLE bn_m_account
    ADD CONSTRAINT FK_BN_M_ACCOUNT_ON_CURRENCY FOREIGN KEY (currency_id) REFERENCES bn_r_currency (currency_id);

CREATE INDEX BN_M_ACCOUNT_CURRENCY_ID_IDX ON bn_m_account (currency_id);

ALTER TABLE bn_m_account
    ADD CONSTRAINT FK_BN_M_ACCOUNT_ON_CUSTOMER FOREIGN KEY (customer_id) REFERENCES bn_m_customer (customer_id);

CREATE INDEX BN_M_ACCOUNT_CUSTOMER_ID_IDX ON bn_m_account (customer_id);

ALTER TABLE bn_m_account
    ADD CONSTRAINT FK_BN_M_ACCOUNT_ON_STATUS FOREIGN KEY (status_id) REFERENCES bn_r_status (status_id);

CREATE INDEX BN_M_ACCOUNT_STATUS_ID_IDX ON bn_m_account (status_id);

ALTER TABLE bn_m_acc_card_details
    ADD CONSTRAINT FK_BN_M_ACC_CARD_DETAILS_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES bn_m_account (account_id);

CREATE INDEX BN_M_ACC_CARD_DETAILS_ACCOUNT_ID ON bn_m_acc_card_details (account_id);

ALTER TABLE bn_m_acc_card_details
    ADD CONSTRAINT FK_BN_M_ACC_CARD_DETAILS_ON_CARD FOREIGN KEY (card_id) REFERENCES bn_m_card_detail (card_id);

CREATE INDEX BN_M_ACC_CARD_DETAILS_CARD_ID ON bn_m_acc_card_details (card_id);

ALTER TABLE bn_m_beneficiary
    ADD CONSTRAINT FK_BN_M_BENEFICIARY_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES bn_m_account (account_id);

CREATE INDEX BN_R_BENEFICIARY_ACCOUNT_ID_IDX ON bn_m_beneficiary (account_id);

ALTER TABLE bn_m_beneficiary
    ADD CONSTRAINT FK_BN_M_BENEFICIARY_ON_BRANCH FOREIGN KEY (branch_id) REFERENCES bn_r_branch (branch_id);

CREATE INDEX BN_R_BENEFICIARY_BRANCH_ID_IDX ON bn_m_beneficiary (branch_id);

ALTER TABLE bn_m_loan
    ADD CONSTRAINT FK_BN_M_LOAN_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES bn_m_account (account_id);

CREATE INDEX BN_M_LOAN_ACCOUNT_ID_IDX ON bn_m_loan (account_id);

ALTER TABLE bn_m_loan
    ADD CONSTRAINT FK_BN_M_LOAN_ON_LOAN_PRODUCT FOREIGN KEY (loan_product_id) REFERENCES bn_r_loan_product (loan_product_id);

CREATE INDEX BN_M_LOAN_LOAN_PRODUCT_ID_IDX ON bn_m_loan (loan_product_id);

ALTER TABLE bn_m_loan
    ADD CONSTRAINT FK_BN_M_LOAN_ON_STATUS FOREIGN KEY (status_id) REFERENCES bn_r_status (status_id);

CREATE INDEX BN_M_LOAN_STATUS_ID_IDX ON bn_m_loan (status_id);

ALTER TABLE bn_m_staff
    ADD CONSTRAINT FK_BN_M_STAFF_ON_BRANCH FOREIGN KEY (branch_id) REFERENCES bn_r_branch (branch_id);

CREATE INDEX BN_M_STAFF_BRANCH_ID_IDX ON bn_m_staff (branch_id);

ALTER TABLE bn_m_staff
    ADD CONSTRAINT FK_BN_M_STAFF_ON_ROLE FOREIGN KEY (role_id) REFERENCES bn_r_role (role_id);

CREATE INDEX BN_M_STAFF_ROLE_ID_IDX ON bn_m_staff (role_id);

ALTER TABLE bn_r_branch
    ADD CONSTRAINT FK_BN_R_BRANCH_ON_BANK FOREIGN KEY (bank_id) REFERENCES bn_r_bank (bank_id);

CREATE INDEX BN_R_BRANCH_BANK_ID_IDX ON bn_r_branch (bank_id);

ALTER TABLE bn_r_charge
    ADD CONSTRAINT FK_BN_R_CHARGE_ON_CURRENCY FOREIGN KEY (currency_id) REFERENCES bn_r_currency (currency_id);

CREATE INDEX BN_R_CHARGE_CURRENCY_ID_IDX ON bn_r_charge (currency_id);

ALTER TABLE bn_r_charge
    ADD CONSTRAINT FK_BN_R_CHARGE_ON_FEE_TYPE FOREIGN KEY (fee_type_id) REFERENCES bn_r_fee_type (fee_type_id);

CREATE INDEX BN_R_CHARGE_FEE_TYPE_ID_IDX ON bn_r_charge (fee_type_id);

ALTER TABLE bn_r_loan_product
    ADD CONSTRAINT FK_BN_R_LOAN_PRODUCT_ON_INT_RATE FOREIGN KEY (int_rate_id) REFERENCES bn_r_int_rate (int_rate_id);

CREATE INDEX BN_R_LOAN_PRODUCT_INT_RATE_ID_IDX ON bn_r_loan_product (int_rate_id);

ALTER TABLE bn_r_loan_product
    ADD CONSTRAINT FK_BN_R_LOAN_PRODUCT_ON_LOAN_PERIOD FOREIGN KEY (loan_period_id) REFERENCES bn_r_loan_period (loan_period_id);

CREATE INDEX BN_R_LOAN_PRODUCT_LOAN_PERIOD_ID_IDX ON bn_r_loan_product (loan_period_id);

ALTER TABLE bn_r_loan_product
    ADD CONSTRAINT FK_BN_R_LOAN_PRODUCT_ON_LOAN_TYPE FOREIGN KEY (loan_type_id) REFERENCES bn_r_loan_type (loan_type_id);

CREATE INDEX BN_R_LOAN_PRODUCT_LOAN_TYPE_ID_IDX ON bn_r_loan_product (loan_type_id);

ALTER TABLE bn_t_tran
    ADD CONSTRAINT FK_BN_T_TRAN_ON_BRANCH FOREIGN KEY (branch_id) REFERENCES bn_r_branch (branch_id);

ALTER TABLE bn_t_tran
    ADD CONSTRAINT FK_BN_T_TRAN_ON_STATUS FOREIGN KEY (status_id) REFERENCES bn_r_status (status_id);

ALTER TABLE bn_t_tran
    ADD CONSTRAINT FK_BN_T_TRAN_ON_TRAN_TYPE FOREIGN KEY (tran_type_id) REFERENCES bn_r_tran_type (tran_type_id);

CREATE INDEX BN_T_TRAN_TRAN_TYPE_ID_IDX ON bn_t_tran (tran_type_id);
CREATE SEQUENCE IF NOT EXISTS bn_m_acc_card_detail_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_m_account_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_m_beneficiary_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_m_card_detail_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_m_customer_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_m_loan_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_m_staff_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_r_account_type_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_r_bank_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_r_branch_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_r_charge_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_r_currency_rate_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_r_currency_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_r_fee_type_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_r_int_rate_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_r_loan_period_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_r_loan_product_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_r_loan_type_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_r_role_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_r_status_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_r_tran_type_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS bn_t_tran_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE bn_m_acc_card_details
(
    acc_card_id BIGINT NOT NULL,
    created_by  VARCHAR(255),
    updated_by  VARCHAR(255),
    created_on  TIMESTAMP WITHOUT TIME ZONE,
    updated_on  TIMESTAMP WITHOUT TIME ZONE,
    account_id  BIGINT NOT NULL,
    card_id     BIGINT NOT NULL,
    CONSTRAINT pk_bn_m_acc_card_details PRIMARY KEY (acc_card_id)
);

CREATE TABLE bn_m_account
(
    account_id            BIGINT NOT NULL,
    created_by            VARCHAR(255),
    updated_by            VARCHAR(255),
    created_on            TIMESTAMP WITHOUT TIME ZONE,
    updated_on            TIMESTAMP WITHOUT TIME ZONE,
    account_no            VARCHAR(25),
    current_bal           FLOAT  NOT NULL,
    available_bal         FLOAT  NOT NULL,
    hold_bal              FLOAT  NOT NULL,
    open_date             date,
    is_active             BOOLEAN,
    is_first_deposit_done BOOLEAN,
    customer_id           BIGINT NOT NULL,
    account_type_id       BIGINT NOT NULL,
    status_id             BIGINT NOT NULL,
    currency_id           BIGINT NOT NULL,
    branch_id             BIGINT NOT NULL,
    CONSTRAINT pk_bn_m_account PRIMARY KEY (account_id)
);

CREATE TABLE bn_m_beneficiary
(
    beneficiary_id BIGINT NOT NULL,
    created_by     VARCHAR(255),
    updated_by     VARCHAR(255),
    created_on     TIMESTAMP WITHOUT TIME ZONE,
    updated_on     TIMESTAMP WITHOUT TIME ZONE,
    full_name      VARCHAR(100),
    account_no     VARCHAR(25),
    nic            VARCHAR(12),
    mobile_no      VARCHAR(10),
    email          VARCHAR(60),
    account_id     BIGINT NOT NULL,
    branch_id      BIGINT NOT NULL,
    CONSTRAINT pk_bn_m_beneficiary PRIMARY KEY (beneficiary_id)
);

CREATE TABLE bn_m_card_detail
(
    card_id     BIGINT NOT NULL,
    created_by  VARCHAR(255),
    updated_by  VARCHAR(255),
    created_on  TIMESTAMP WITHOUT TIME ZONE,
    updated_on  TIMESTAMP WITHOUT TIME ZONE,
    card_type   VARCHAR(20),
    card_no     VARCHAR(16),
    expiry_date VARCHAR(10),
    cvv         VARCHAR(3),
    pin         VARCHAR(4),
    CONSTRAINT pk_bn_m_card_detail PRIMARY KEY (card_id)
);

CREATE TABLE bn_m_customer
(
    customer_id BIGINT NOT NULL,
    created_by  VARCHAR(255),
    updated_by  VARCHAR(255),
    created_on  TIMESTAMP WITHOUT TIME ZONE,
    updated_on  TIMESTAMP WITHOUT TIME ZONE,
    first_name  VARCHAR(50),
    last_name   VARCHAR(50),
    dob         date,
    address     VARCHAR(200),
    email       VARCHAR(60),
    mobile_no   VARCHAR(10),
    nic         VARCHAR(12),
    gender      VARCHAR(1),
    is_active   BOOLEAN,
    CONSTRAINT pk_bn_m_customer PRIMARY KEY (customer_id)
);

CREATE TABLE bn_m_loan
(
    loan_id               BIGINT NOT NULL,
    created_by            VARCHAR(255),
    updated_by            VARCHAR(255),
    created_on            TIMESTAMP WITHOUT TIME ZONE,
    updated_on            TIMESTAMP WITHOUT TIME ZONE,
    amount                FLOAT  NOT NULL,
    interest              FLOAT  NOT NULL,
    tot_installments      INTEGER,
    next_installment_date date,
    tot_arrears_amt       FLOAT  NOT NULL,
    rem_installments      INTEGER,
    next_installment_amt  FLOAT  NOT NULL,
    distributed_amt       FLOAT  NOT NULL,
    tot_settled_amt       FLOAT  NOT NULL,
    tot_interest_paid     FLOAT  NOT NULL,
    tot_paid              FLOAT  NOT NULL,
    status_id             BIGINT NOT NULL,
    account_id            BIGINT NOT NULL,
    loan_product_id       BIGINT NOT NULL,
    CONSTRAINT pk_bn_m_loan PRIMARY KEY (loan_id)
);

CREATE TABLE bn_m_staff
(
    staff_id   BIGINT NOT NULL,
    created_by VARCHAR(255),
    updated_by VARCHAR(255),
    created_on TIMESTAMP WITHOUT TIME ZONE,
    updated_on TIMESTAMP WITHOUT TIME ZONE,
    first_name VARCHAR(50),
    last_name  VARCHAR(50),
    email      VARCHAR(70),
    username   VARCHAR(30),
    password   VARCHAR(200),
    mobile_no  VARCHAR(10),
    address    VARCHAR(80),
    is_active  BOOLEAN,
    role_id    BIGINT NOT NULL,
    branch_id  BIGINT NOT NULL,
    CONSTRAINT pk_bn_m_staff PRIMARY KEY (staff_id)
);

CREATE TABLE bn_r_account_type
(
    account_type_id   BIGINT NOT NULL,
    created_by        VARCHAR(255),
    updated_by        VARCHAR(255),
    created_on        TIMESTAMP WITHOUT TIME ZONE,
    updated_on        TIMESTAMP WITHOUT TIME ZONE,
    account_type_name VARCHAR(50),
    account_type_code VARCHAR(5),
    CONSTRAINT pk_bn_r_account_type PRIMARY KEY (account_type_id)
);

CREATE TABLE bn_r_bank
(
    bank_id    BIGINT NOT NULL,
    created_by VARCHAR(255),
    updated_by VARCHAR(255),
    created_on TIMESTAMP WITHOUT TIME ZONE,
    updated_on TIMESTAMP WITHOUT TIME ZONE,
    bank_name  VARCHAR(45),
    bank_code  VARCHAR(5),
    is_active  BOOLEAN,
    CONSTRAINT pk_bn_r_bank PRIMARY KEY (bank_id)
);

CREATE TABLE bn_r_branch
(
    branch_id   BIGINT NOT NULL,
    created_by  VARCHAR(255),
    updated_by  VARCHAR(255),
    created_on  TIMESTAMP WITHOUT TIME ZONE,
    updated_on  TIMESTAMP WITHOUT TIME ZONE,
    branch_name VARCHAR(50),
    branch_code VARCHAR(5),
    is_active   BOOLEAN,
    bank_id     BIGINT NOT NULL,
    CONSTRAINT pk_bn_r_branch PRIMARY KEY (branch_id)
);

CREATE TABLE bn_r_charge
(
    charge_id       BIGINT NOT NULL,
    created_by      VARCHAR(255),
    updated_by      VARCHAR(255),
    created_on      TIMESTAMP WITHOUT TIME ZONE,
    updated_on      TIMESTAMP WITHOUT TIME ZONE,
    charge_desc     VARCHAR(100),
    amount          FLOAT  NOT NULL,
    effective_date  date,
    expiration_date date,
    fee_type_id     BIGINT NOT NULL,
    currency_id     BIGINT NOT NULL,
    CONSTRAINT pk_bn_r_charge PRIMARY KEY (charge_id)
);

CREATE TABLE bn_r_currency
(
    currency_id   BIGINT NOT NULL,
    created_by    VARCHAR(255),
    updated_by    VARCHAR(255),
    created_on    TIMESTAMP WITHOUT TIME ZONE,
    updated_on    TIMESTAMP WITHOUT TIME ZONE,
    currency_name VARCHAR(45),
    currency_code VARCHAR(5),
    CONSTRAINT pk_bn_r_currency PRIMARY KEY (currency_id)
);

CREATE TABLE bn_r_currency_rate
(
    currency_rate_id BIGINT NOT NULL,
    created_by       VARCHAR(255),
    updated_by       VARCHAR(255),
    created_on       TIMESTAMP WITHOUT TIME ZONE,
    updated_on       TIMESTAMP WITHOUT TIME ZONE,
    selling_rate     FLOAT,
    buying_rate      FLOAT,
    middle_rate      FLOAT,
    publication_date date,
    currency_id      BIGINT NOT NULL,
    CONSTRAINT pk_bn_r_currency_rate PRIMARY KEY (currency_rate_id)
);

CREATE TABLE bn_r_fee_type
(
    fee_type_id   BIGINT NOT NULL,
    created_by    VARCHAR(255),
    updated_by    VARCHAR(255),
    created_on    TIMESTAMP WITHOUT TIME ZONE,
    updated_on    TIMESTAMP WITHOUT TIME ZONE,
    fee_type_name VARCHAR(45),
    fee_type_desc VARCHAR(100),
    CONSTRAINT pk_bn_r_fee_type PRIMARY KEY (fee_type_id)
);

CREATE TABLE bn_r_int_rate
(
    int_rate_id   BIGINT NOT NULL,
    created_by    VARCHAR(255),
    updated_by    VARCHAR(255),
    created_on    TIMESTAMP WITHOUT TIME ZONE,
    updated_on    TIMESTAMP WITHOUT TIME ZONE,
    int_rate_name VARCHAR(45),
    int_rate_desc VARCHAR(100),
    rate          FLOAT  NOT NULL,
    CONSTRAINT pk_bn_r_int_rate PRIMARY KEY (int_rate_id)
);

CREATE TABLE bn_r_loan_period
(
    loan_period_id   BIGINT NOT NULL,
    created_by       VARCHAR(255),
    updated_by       VARCHAR(255),
    created_on       TIMESTAMP WITHOUT TIME ZONE,
    updated_on       TIMESTAMP WITHOUT TIME ZONE,
    loan_period_name VARCHAR(45),
    loan_period_desc VARCHAR(100),
    month            INTEGER,
    CONSTRAINT pk_bn_r_loan_period PRIMARY KEY (loan_period_id)
);

CREATE TABLE bn_r_loan_product
(
    loan_product_id BIGINT NOT NULL,
    created_by      VARCHAR(255),
    updated_by      VARCHAR(255),
    created_on      TIMESTAMP WITHOUT TIME ZONE,
    updated_on      TIMESTAMP WITHOUT TIME ZONE,
    loan_type_id    BIGINT NOT NULL,
    int_rate_id     BIGINT NOT NULL,
    loan_period_id  BIGINT NOT NULL,
    CONSTRAINT pk_bn_r_loan_product PRIMARY KEY (loan_product_id)
);

CREATE TABLE bn_r_loan_type
(
    loan_type_id   BIGINT NOT NULL,
    created_by     VARCHAR(255),
    updated_by     VARCHAR(255),
    created_on     TIMESTAMP WITHOUT TIME ZONE,
    updated_on     TIMESTAMP WITHOUT TIME ZONE,
    loan_type_name VARCHAR(50),
    loan_type_code VARCHAR(5),
    loan_type_desc VARCHAR(100),
    CONSTRAINT pk_bn_r_loan_type PRIMARY KEY (loan_type_id)
);

CREATE TABLE bn_r_role
(
    role_id     BIGINT NOT NULL,
    created_by  VARCHAR(255),
    updated_by  VARCHAR(255),
    created_on  TIMESTAMP WITHOUT TIME ZONE,
    updated_on  TIMESTAMP WITHOUT TIME ZONE,
    name        VARCHAR(40),
    description VARCHAR(100),
    is_active   BOOLEAN,
    CONSTRAINT pk_bn_r_role PRIMARY KEY (role_id)
);

CREATE TABLE bn_r_status
(
    status_id   BIGINT NOT NULL,
    created_by  VARCHAR(255),
    updated_by  VARCHAR(255),
    created_on  TIMESTAMP WITHOUT TIME ZONE,
    updated_on  TIMESTAMP WITHOUT TIME ZONE,
    status_name VARCHAR(45),
    status_code VARCHAR(5),
    status_type VARCHAR(45),
    CONSTRAINT pk_bn_r_status PRIMARY KEY (status_id)
);

CREATE TABLE bn_r_tran_type
(
    tran_type_id   BIGINT NOT NULL,
    created_by     VARCHAR(255),
    updated_by     VARCHAR(255),
    created_on     TIMESTAMP WITHOUT TIME ZONE,
    updated_on     TIMESTAMP WITHOUT TIME ZONE,
    tran_type_name VARCHAR(45),
    tran_type_code VARCHAR(5),
    CONSTRAINT pk_bn_r_tran_type PRIMARY KEY (tran_type_id)
);

CREATE TABLE bn_t_tran
(
    tran_id         BIGINT       NOT NULL,
    created_by      VARCHAR(255),
    updated_by      VARCHAR(255),
    created_on      TIMESTAMP WITHOUT TIME ZONE,
    updated_on      TIMESTAMP WITHOUT TIME ZONE,
    amount          FLOAT        NOT NULL,
    tran_date       date         NOT NULL,
    tran_time       time WITHOUT TIME ZONE NOT NULL,
    tran_type_id    BIGINT       NOT NULL,
    description     VARCHAR(255) NOT NULL,
    from_account_no VARCHAR(255) NOT NULL,
    to_account_no   VARCHAR(255) NOT NULL,
    tran_reference  VARCHAR(200),
    status_id       BIGINT       NOT NULL,
    branch_id       BIGINT       NOT NULL,
    CONSTRAINT pk_bn_t_tran PRIMARY KEY (tran_id)
);

ALTER TABLE bn_m_account
    ADD CONSTRAINT uc_bn_m_account_account_no UNIQUE (account_no);

ALTER TABLE bn_m_card_detail
    ADD CONSTRAINT uc_bn_m_card_detail_card_no UNIQUE (card_no);

ALTER TABLE bn_m_customer
    ADD CONSTRAINT uc_bn_m_customer_nic UNIQUE (nic);

ALTER TABLE bn_m_staff
    ADD CONSTRAINT uc_bn_m_staff_username UNIQUE (username);

ALTER TABLE bn_r_account_type
    ADD CONSTRAINT uc_bn_r_account_type_account_type_code UNIQUE (account_type_code);

ALTER TABLE bn_r_bank
    ADD CONSTRAINT uc_bn_r_bank_bank_code UNIQUE (bank_code);

ALTER TABLE bn_r_branch
    ADD CONSTRAINT uc_bn_r_branch_branch_code UNIQUE (branch_code);

ALTER TABLE bn_r_currency
    ADD CONSTRAINT uc_bn_r_currency_currency_code UNIQUE (currency_code);

ALTER TABLE bn_r_loan_type
    ADD CONSTRAINT uc_bn_r_loan_type_loan_type_code UNIQUE (loan_type_code);

ALTER TABLE bn_r_status
    ADD CONSTRAINT uc_bn_r_status_status_code UNIQUE (status_code);

ALTER TABLE bn_r_tran_type
    ADD CONSTRAINT uc_bn_r_tran_type_tran_type_code UNIQUE (tran_type_code);

CREATE UNIQUE INDEX BN_M_ACCOUNT_ACCOUNT_NO_UNIQUE_IDX ON bn_m_account (account_no);

CREATE UNIQUE INDEX BN_M_CARD_DETAIL_CARD_NO_UNIQUE_IDX ON bn_m_card_detail (card_no);

CREATE UNIQUE INDEX BN_M_CUSTOMER_NIC_UNIQUE_IDX ON bn_m_customer (nic);

CREATE INDEX BN_M_STAFF_USERNAME_UNIQUE_IDX ON bn_m_staff (username);

CREATE UNIQUE INDEX BN_R_ACCOUNT_TYPE_ACCOUNT_TYPE_CODE_IDX ON bn_r_account_type (account_type_code);

CREATE UNIQUE INDEX BN_R_BANK_BANK_CODE_IDX ON bn_r_bank (bank_code);

CREATE UNIQUE INDEX BN_R_BRANCH_BRANCH_CODE_IDX ON bn_r_branch (branch_code);

CREATE UNIQUE INDEX BN_R_CURRENCY_CURRENCY_CODE_IDX ON bn_r_currency (currency_code);

CREATE UNIQUE INDEX BN_R_LOAN_TYPE_LOAN_TYPE_CODE_IDX ON bn_r_loan_type (loan_type_code);

CREATE UNIQUE INDEX BN_R_STATUS_STATUS_CODE_IDX ON bn_r_status (status_code);

CREATE UNIQUE INDEX BN_R_TRAN_TYPE_TRAN_TYPE_CODE_IDX ON bn_r_tran_type (tran_type_code);

ALTER TABLE bn_m_account
    ADD CONSTRAINT FK_BN_M_ACCOUNT_ON_ACCOUNT_TYPE FOREIGN KEY (account_type_id) REFERENCES bn_r_account_type (account_type_id);

CREATE INDEX BN_M_ACCOUNT_ACCOUNT_TYPE_ID_IDX ON bn_m_account (account_type_id);

ALTER TABLE bn_m_account
    ADD CONSTRAINT FK_BN_M_ACCOUNT_ON_BRANCH FOREIGN KEY (branch_id) REFERENCES bn_r_branch (branch_id);

CREATE INDEX BN_M_ACCOUNT_BRANCH_ID_IDX ON bn_m_account (branch_id);

ALTER TABLE bn_m_account
    ADD CONSTRAINT FK_BN_M_ACCOUNT_ON_CURRENCY FOREIGN KEY (currency_id) REFERENCES bn_r_currency (currency_id);

CREATE INDEX BN_M_ACCOUNT_CURRENCY_ID_IDX ON bn_m_account (currency_id);

ALTER TABLE bn_m_account
    ADD CONSTRAINT FK_BN_M_ACCOUNT_ON_CUSTOMER FOREIGN KEY (customer_id) REFERENCES bn_m_customer (customer_id);

CREATE INDEX BN_M_ACCOUNT_CUSTOMER_ID_IDX ON bn_m_account (customer_id);

ALTER TABLE bn_m_account
    ADD CONSTRAINT FK_BN_M_ACCOUNT_ON_STATUS FOREIGN KEY (status_id) REFERENCES bn_r_status (status_id);

CREATE INDEX BN_M_ACCOUNT_STATUS_ID_IDX ON bn_m_account (status_id);

ALTER TABLE bn_m_acc_card_details
    ADD CONSTRAINT FK_BN_M_ACC_CARD_DETAILS_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES bn_m_account (account_id);

CREATE INDEX BN_M_ACC_CARD_DETAILS_ACCOUNT_ID ON bn_m_acc_card_details (account_id);

ALTER TABLE bn_m_acc_card_details
    ADD CONSTRAINT FK_BN_M_ACC_CARD_DETAILS_ON_CARD FOREIGN KEY (card_id) REFERENCES bn_m_card_detail (card_id);

CREATE INDEX BN_M_ACC_CARD_DETAILS_CARD_ID ON bn_m_acc_card_details (card_id);

ALTER TABLE bn_m_beneficiary
    ADD CONSTRAINT FK_BN_M_BENEFICIARY_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES bn_m_account (account_id);

CREATE INDEX BN_R_BENEFICIARY_ACCOUNT_ID_IDX ON bn_m_beneficiary (account_id);

ALTER TABLE bn_m_beneficiary
    ADD CONSTRAINT FK_BN_M_BENEFICIARY_ON_BRANCH FOREIGN KEY (branch_id) REFERENCES bn_r_branch (branch_id);

CREATE INDEX BN_R_BENEFICIARY_BRANCH_ID_IDX ON bn_m_beneficiary (branch_id);

ALTER TABLE bn_m_loan
    ADD CONSTRAINT FK_BN_M_LOAN_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES bn_m_account (account_id);

CREATE INDEX BN_M_LOAN_ACCOUNT_ID_IDX ON bn_m_loan (account_id);

ALTER TABLE bn_m_loan
    ADD CONSTRAINT FK_BN_M_LOAN_ON_LOAN_PRODUCT FOREIGN KEY (loan_product_id) REFERENCES bn_r_loan_product (loan_product_id);

CREATE INDEX BN_M_LOAN_LOAN_PRODUCT_ID_IDX ON bn_m_loan (loan_product_id);

ALTER TABLE bn_m_loan
    ADD CONSTRAINT FK_BN_M_LOAN_ON_STATUS FOREIGN KEY (status_id) REFERENCES bn_r_status (status_id);

CREATE INDEX BN_M_LOAN_STATUS_ID_IDX ON bn_m_loan (status_id);

ALTER TABLE bn_m_staff
    ADD CONSTRAINT FK_BN_M_STAFF_ON_BRANCH FOREIGN KEY (branch_id) REFERENCES bn_r_branch (branch_id);

CREATE INDEX BN_M_STAFF_BRANCH_ID_IDX ON bn_m_staff (branch_id);

ALTER TABLE bn_m_staff
    ADD CONSTRAINT FK_BN_M_STAFF_ON_ROLE FOREIGN KEY (role_id) REFERENCES bn_r_role (role_id);

CREATE INDEX BN_M_STAFF_ROLE_ID_IDX ON bn_m_staff (role_id);

ALTER TABLE bn_r_branch
    ADD CONSTRAINT FK_BN_R_BRANCH_ON_BANK FOREIGN KEY (bank_id) REFERENCES bn_r_bank (bank_id);

CREATE INDEX BN_R_BRANCH_BANK_ID_IDX ON bn_r_branch (bank_id);

ALTER TABLE bn_r_charge
    ADD CONSTRAINT FK_BN_R_CHARGE_ON_CURRENCY FOREIGN KEY (currency_id) REFERENCES bn_r_currency (currency_id);

CREATE INDEX BN_R_CHARGE_CURRENCY_ID_IDX ON bn_r_charge (currency_id);

ALTER TABLE bn_r_charge
    ADD CONSTRAINT FK_BN_R_CHARGE_ON_FEE_TYPE FOREIGN KEY (fee_type_id) REFERENCES bn_r_fee_type (fee_type_id);

CREATE INDEX BN_R_CHARGE_FEE_TYPE_ID_IDX ON bn_r_charge (fee_type_id);

ALTER TABLE bn_r_currency_rate
    ADD CONSTRAINT FK_BN_R_CURRENCY_RATE_ON_CURRENCY FOREIGN KEY (currency_id) REFERENCES bn_r_currency (currency_id);

CREATE INDEX BN_R_CURRENCY_RATE_CURRENCY_ID_IDX ON bn_r_currency_rate (currency_id);

ALTER TABLE bn_r_loan_product
    ADD CONSTRAINT FK_BN_R_LOAN_PRODUCT_ON_INT_RATE FOREIGN KEY (int_rate_id) REFERENCES bn_r_int_rate (int_rate_id);

CREATE INDEX BN_R_LOAN_PRODUCT_INT_RATE_ID_IDX ON bn_r_loan_product (int_rate_id);

ALTER TABLE bn_r_loan_product
    ADD CONSTRAINT FK_BN_R_LOAN_PRODUCT_ON_LOAN_PERIOD FOREIGN KEY (loan_period_id) REFERENCES bn_r_loan_period (loan_period_id);

CREATE INDEX BN_R_LOAN_PRODUCT_LOAN_PERIOD_ID_IDX ON bn_r_loan_product (loan_period_id);

ALTER TABLE bn_r_loan_product
    ADD CONSTRAINT FK_BN_R_LOAN_PRODUCT_ON_LOAN_TYPE FOREIGN KEY (loan_type_id) REFERENCES bn_r_loan_type (loan_type_id);

CREATE INDEX BN_R_LOAN_PRODUCT_LOAN_TYPE_ID_IDX ON bn_r_loan_product (loan_type_id);

ALTER TABLE bn_t_tran
    ADD CONSTRAINT FK_BN_T_TRAN_ON_BRANCH FOREIGN KEY (branch_id) REFERENCES bn_r_branch (branch_id);

ALTER TABLE bn_t_tran
    ADD CONSTRAINT FK_BN_T_TRAN_ON_STATUS FOREIGN KEY (status_id) REFERENCES bn_r_status (status_id);

ALTER TABLE bn_t_tran
    ADD CONSTRAINT FK_BN_T_TRAN_ON_TRAN_TYPE FOREIGN KEY (tran_type_id) REFERENCES bn_r_tran_type (tran_type_id);

CREATE INDEX BN_T_TRAN_TRAN_TYPE_ID_IDX ON bn_t_tran (tran_type_id);